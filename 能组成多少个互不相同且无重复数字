题目
有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？

num_list = []
for i in range(1, 5):
    for j in range(1, 5):
        for k in range(1, 5):
            if (i != j) and (j != k) and (i != k):
                num = i * 100 + j * 10 + k
                num_list.append(num)
print(num_list)
print(len(num_list))


def num_count(num_list):
    num_count_list = []
    for i in num_list:
        for j in num_list:
            for k in num_list:
                if (i != j) and (j != k) and (i != k):
                    num = i * 100 + j * 10 + k
                    num_count_list.append(num)
    print(num_count_list)
    print(len(num_count_list))


num_count([1,2,3,4,])


class Solution(object):
    def __init__(self, num_list):
        self.num_list = num_list

    def num_count(self):
        num_count_list = []
        for i in self.num_list:
            for j in self.num_list:
                for k in self.num_list:
                    if (i != j) and (j != k) and (i != k):
                        num = i * 100 + j * 10 + k
                        num_count_list.append(num)
        print(num_count_list)
        print(len(num_count_list))


if __name__ == "__main__":
    s = Solution([1,2,3,4,5,6,7,8])
    s.num_count()
